# BNF grammar to parse JSON objects
# root   ::= ws object
# value  ::= object | array | string | number | ("true" | "false" | "null")

# object ::=
#   "{" ws (
#             string ":" ws value ws
#     ("," ws string ":" ws value ws )*
#   )? "}"

# array  ::=
#   "[" ws (
#             value ws
#     ("," ws value ws )*
#   )? "]"

# string ::=
#   "\"" (
#     [^"\\] |
#     "\\" (["\\/bfnrt] | "u" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]) # escapes
#   )* "\""

# number ::= ("-"? ([0-9] | [1-9] [0-9]*)) ("." [0-9]+)? ([eE] [-+]? [0-9]+)?

# # whitespace
# ws ::= ([ \t\n] ws)?

# BNF grammar to (partially parse) LaTeX

root ::= pre "\\begin{document}" stuff "\\end{document}" post
pre  ::= .*
post ::= .*

stuff ::= (atom | construct)*

atom ::= command | comment | text

construct ::= env | dmath | tmath | group

command ::= "\\"cname
env ::= "\\begin{"cname"}" stuff "\\end{"cname"}"
dmath ::= ("$$" stuff "$$") | ("\\[" stuff "\\]")
tmath ::= ("$" stuff "$") | ("\\(" stuff "\\)")
group ::= "{" stuff "}"

name ::= [a-zA-Z]+
comment ::= "%".*"\n"
text ::= [^\\{}$%]+
